services:

  # ------------------------ NGINX SERVICE ------------------------
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user_service
      - agenda_service
      - reservation_service

  # ------------------------ USER SERVICE ------------------------
  user_service:
    build: ./user_service
    ports:
      - "3001:3000"
    environment:
      - PORT=3000
      - DB_HOST=user_db
      - DB_USER=root
      - DB_NAME=usuarios_f
      - JWT_SECRET=no_es_una_contraseña_pero_suena_segura_y_si_la_ves_no_la_uses_ni_la_copies_porfa_gracias
      - NODE_ENV=development
      - SWAGGER_HOST_PORT=3001
    depends_on:
      - user_db
    volumes:
      - ./user_service:/usr/src/app
      - /usr/src/app/node_modules
    command: sh -c "npx knex migrate:latest --knexfile knexfile.js --env development && node app.js"

  user_db:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: usuarios_f
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # ------------------------ AGENDA SERVICE ------------------------
  agenda_service:
    build: ./agenda_service
    ports:
      - "4001:4000"
    environment:
      - PORT=4000
      - HOST_PORT=4001
      - MONGO_URI=mongodb://agenda_db:27017/agenda_f
      - JWT_SECRET=no_es_una_contraseña_pero_suena_segura_y_si_la_ves_no_la_uses_ni_la_copies_porfa_gracias
    depends_on:
      - agenda_db
    volumes:
      - ./agenda_service:/usr/src/app
      - /usr/src/app/node_modules

  agenda_db:
    image: mongo:6.0
    environment:
      MONGO_INITDB_DATABASE: agenda_f
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db

  # ------------------------ RESERVATION SERVICE ------------------------
  reservation_service:
    build: ./reservation_service
    ports:
      - "5001:5000"
    environment:
      - DATABASE_URL=postgresql://usuario:contraseña@reservation_db:5432/reserva_f
      - JWT_SECRET=no_es_una_contraseña_pero_suena_segura_y_si_la_ves_no_la_uses_ni_la_copies_porfa_gracias
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin
    depends_on:
      - reservation_db
      - rabbitmq
    volumes:
      - ./reservation_service:/usr/src/app
    command: sh -c "flask db upgrade && python app.py"

  reservation_db:
    image: postgres:15
    environment:
      POSTGRES_DB: reserva_f
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: contraseña
    ports:
      - "5433:5432"
    volumes:
      - flask_postgress_data:/var/lib/postgresql/data

  # ------------------------ LOGS SERVICE ------------------------
  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./logs:/logs

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - ./user_service/logs:/logs/user_service_logs
      - ./agenda_service/src/logs:/logs/agenda_service_logs
      - ./reservation_service/logs:/logs/reservation_service_logs
      - ./logs/promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki


  grafana:
    image: grafana/grafana:10.4.2
    ports:
      - "3000:3000"
    depends_on:
      - loki
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana

# ------------------------ NOTIFICATION SERVICE ------------------------
  notification_service:
    build: ./notification_service
    ports:
      - "6001:6000"
    environment:
      - PORT=6000
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin
      - USER_SERVICE_URL=http://user_service:3000/api
    depends_on:
      - rabbitmq
    volumes:
      - ./notification_service:/usr/src/app
      - /usr/src/app/node_modules
      - ./notification_service/logs:/usr/src/app/logs

# ------------------------ MESAGE  ------------------------
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"     # para la conexión con el backend
      - "15672:15672"   # para la UI de administración
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

# ------------------------ VOLUMES ----------------------------
volumes:
  mongo_data:
  mysql_data:
  flask_postgress_data:
  grafana_data:       
  rabbitmq_data:

